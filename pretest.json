{
  "version": 2.0,
  "questions": [
    {
      "question": "What is the primary purpose of the stack in a pushdown automaton (PDA)?",
      "answers": {
        "a": "To store input symbols.",
        "b": "To store intermediate results and track computations.",
        "c": "To store the final output.",
        "d": "To perform arithmetic operations."
      },
      "explanations": {
        "a": "Incorrect. The input is read sequentially and not stored on the stack.",
        "b": "Correct! The stack allows the PDA to keep track of intermediate computations, enabling recognition of context-free languages.",
        "c": "Incorrect. The stack is used for processing, not for output storage.",
        "d": "Incorrect. PDAs do not perform arithmetic operations using the stack."
      },
      "correctAnswer": "b",
      "difficulty": "beginner"
    },
    {
      "question": "What distinguishes a pushdown automaton (PDA) from a finite automaton (FA)?",
      "answers": {
        "a": "The PDA has an infinite tape.",
        "b": "The PDA has a stack for additional memory.",
        "c": "The PDA uses only states without transitions.",
        "d": "The PDA recognizes only regular languages."
      },
      "explanations": {
        "a": "Incorrect. Infinite tapes are for Turing machines, not PDAs.",
        "b": "Correct! The stack provides additional memory, allowing PDAs to recognize context-free languages.",
        "c": "Incorrect. PDAs use both states and transitions, similar to FAs.",
        "d": "Incorrect. PDAs can recognize context-free languages, which may be non-regular."
      },
      "correctAnswer": "b",
      "difficulty": "beginner"
    },
    {
      "question": "Which type of languages can a PDA recognize that a finite automaton cannot?",
      "answers": {
        "a": "Regular languages",
        "b": "Context-free languages",
        "c": "Context-sensitive languages",
        "d": "All languages"
      },
      "explanations": {
        "a": "Incorrect. Finite automata already recognize regular languages.",
        "b": "Correct! PDAs can recognize context-free languages that may not be regular.",
        "c": "Incorrect. Context-sensitive languages require linear-bounded automata, not PDAs.",
        "d": "Incorrect. PDAs cannot recognize all languages (e.g., non-context-free languages)."
      },
      "correctAnswer": "b",
      "difficulty": "beginner"
    },
    {
      "question": "What is a configuration of a pushdown automaton (PDA)?",
      "answers": {
        "a": "The set of states in the PDA",
        "b": "The current state, remaining input, and stack contents",
        "c": "The transition table of the PDA",
        "d": "The set of terminal symbols"
      },
      "explanations": {
        "a": "Incorrect. A configuration is not just the states.",
        "b": "Correct! A configuration specifies the current state, remaining input, and stack contents at a given step.",
        "c": "Incorrect. Transition tables define rules, not configurations.",
        "d": "Incorrect. Terminals are part of the alphabet, not configurations."
      },
      "correctAnswer": "b",
      "difficulty": "beginner"
    },
    {
      "question": "Which acceptance methods are used by a PDA?",
      "answers": {
        "a": "By final state or empty stack",
        "b": "By input length only",
        "c": "By number of states",
        "d": "By stack size only"
      },
      "explanations": {
        "a": "Correct! A PDA can accept input either by reaching a final state or by emptying its stack after processing.",
        "b": "Incorrect. Input length alone does not determine acceptance.",
        "c": "Incorrect. Number of states is not an acceptance criterion.",
        "d": "Incorrect. Stack size alone is insufficient for acceptance."
      },
      "correctAnswer": "a",
      "difficulty": "beginner"
    },
    {
      "question": "How does a PDA process input differently from a finite automaton (FA)?",
      "answers": {
        "a": "It reads the input twice.",
        "b": "It uses the stack to make decisions based on input and stack content.",
        "c": "It ignores some input symbols.",
        "d": "It only works with empty strings."
      },
      "explanations": {
        "a": "Incorrect. PDAs process input sequentially in one pass, not multiple times.",
        "b": "Correct! The stack allows the PDA to decide transitions based on both the input symbol and the stack top.",
        "c": "Incorrect. PDAs read all input symbols sequentially.",
        "d": "Incorrect. PDAs can process any string in the language."
      },
      "correctAnswer": "b",
      "difficulty": "beginner"
    }
  ]
}
